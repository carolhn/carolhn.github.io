{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from 'react';\nimport AppContext from '../context/AppContext';\n\n// Source: https://usehooks.com/useOnScreen/\nexport default function useOnScreen(ref) {\n  _s();\n  let rootMargin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0px';\n  let elementName = arguments.length > 2 ? arguments[2] : undefined;\n  // State and setter for storing whether element is visible\n  const {\n    setOnScreen,\n    isScrollingRef\n  } = useContext(AppContext);\n  useEffect(() => {\n    const observer = new IntersectionObserver(_ref => {\n      let [entry] = _ref;\n      if (entry.isIntersecting && !isScrollingRef.current) setOnScreen(elementName);\n    }, {\n      rootMargin\n    });\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      observer.unobserve(ref.current);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n}\n_s(useOnScreen, \"pwc9MDv1rmFmShNjLCHVa/6Oubc=\");","map":{"version":3,"names":["useEffect","useContext","AppContext","useOnScreen","ref","rootMargin","elementName","setOnScreen","isScrollingRef","observer","IntersectionObserver","entry","isIntersecting","current","observe","unobserve"],"sources":["/home/carol/Github/Portifolio/src/hooks/useOnScreen.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport AppContext from '../context/AppContext';\n\n// Source: https://usehooks.com/useOnScreen/\nexport default function useOnScreen(ref, rootMargin = '0px', elementName) {\n  // State and setter for storing whether element is visible\n  const { setOnScreen, isScrollingRef } = useContext(AppContext);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !isScrollingRef.current) setOnScreen(elementName);\n      },\n      { rootMargin }\n    );\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      observer.unobserve(ref.current);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,OAAOC,UAAU,MAAM,uBAAuB;;AAE9C;AACA,eAAe,SAASC,WAAW,CAACC,GAAG,EAAmC;EAAA;EAAA,IAAjCC,UAAU,uEAAG,KAAK;EAAA,IAAEC,WAAW;EACtE;EACA,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGP,UAAU,CAACC,UAAU,CAAC;EAC9DF,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,QAAa;MAAA,IAAZ,CAACC,KAAK,CAAC;MACN,IAAIA,KAAK,CAACC,cAAc,IAAI,CAACJ,cAAc,CAACK,OAAO,EAAEN,WAAW,CAACD,WAAW,CAAC;IAC/E,CAAC,EACD;MAAED;IAAW,CAAC,CACf;IACD,IAAID,GAAG,CAACS,OAAO,EAAE;MACfJ,QAAQ,CAACK,OAAO,CAACV,GAAG,CAACS,OAAO,CAAC;IAC/B;IACA,OAAO,MAAM;MACXJ,QAAQ,CAACM,SAAS,CAACX,GAAG,CAACS,OAAO,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACV;AAAC,GAjBuBV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}